SELECT EMPLOYEE_ID
	,  FIRST_NAME || ' ' || LAST_NAME AS NAME
	,  SALARY
	,  HIRE_DATE
	FROM EMPLOYEES
	WHERE COMMISSION_PCT IS NULL 
	ORDER BY SALARY DESC, NAME NULLS FIRST;	-- SALARY 순으로 내림차순 정렬. 급여가 같으면 이름 순으로 정렬
	

SELECT EMPLOYEE_ID
	,  FIRST_NAME || ' ' || LAST_NAME AS NAME
	,  SALARY
	,  COMMISSION_PCT
	,  HIRE_DATE
	FROM EMPLOYEES
	ORDER BY 4 NULLS FIRST;	-- 4 번째 컬럼에 대해 NULL 데이터를 먼저 보여줌
	
	
SELECT EMPLOYEE_ID
	,  FIRST_NAME || ' ' || LAST_NAME AS NAME
	,  SALARY
	,  COMMISSION_PCT
	,  HIRE_DATE
	FROM EMPLOYEES
	ORDER BY SALARY, 4 NULL LAST;	-- 급여 순으로 정렬, NULL 데이터를 뒤로 보냄
	
	
	
	

-- 중복 제거
SELECT DISTINCT DEPARTMENT_ID
	FROM EMPLOYEES;
	
	
-- 부서별로 묶어서 출력
SELECT DEPARTMENT_ID
	,  MIN(SALARY)
	,  MAX(SALARY)
	,  AVG(SALARY)
	,  SUM(SALARY)
	,  COUNT(SALARY) 
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID
	ORDER BY DEPARTMENT_ID;
	

SELECT DEPARTMENT_ID
	,  JOB_ID
	,  MIN(SALARY)
	,  MAX(SALARY)
	,  AVG(SALARY)
	,  SUM(SALARY)
	,  COUNT(SALARY)
	FROM EMPLOYEES
	GROUP BY DEPARTMENT_ID, JOB_ID
	ORDER BY DEPARTMENT_ID;
	

SELECT GROUP BY EXTRACT(YEAR FROM HIRE_DATE) AS 고용년
	,  MIN(SALARY)
	,  MAX(SALARY)
	,  AVG(SALARY)
	,  SUM(SALARY)
	,  COUNT(SALARY)
	FROM EMPLOYEES
	GROUP BY EXTRACT(YEAR FROM HIRE_DATE)
	HAVING COUNT(SALARY) > 1;				-- 1 명 이하는 출력 안함
	
	
SELECT COMMISSION_PCT 
	,  MIN(SALARY) AS "최저 급여"
	,  MAX(SALARY) AS "최고 급여"
	,  AVG(SALARY) AS "평균 급여"
	,  SUM(SALARY) AS "급여 총합"
	,  COUNT(SALARY) AS "인원수"
	FROM EMPLOYEES
	WHERE COMMISSION_PCT IS NOT NULL
	AND SALARY >= 7000
	GROUP BY COMMISSION_PCT
	HAVING AVG(SALARY) >= 9500
	ORDER BY 6;


SELECT COMMISSION_PCT
	,  MIN(SALARY) AS "최저 급여"
	,  MAX(SALARY) AS "최고 급여"
	,  AVG(SALARY) AS "평균 급여"
	,  SUM(SALARY) AS "급여 총합"
	,  COUNT(SALARY) AS "인원수"
	FROM EMPLOYEES
	WHERE COMMISSION_PCT IS NOT NULL
	AND SALARY >= 7000
	GROUP BY COMMISSION_PCT;
	


/*
 * 1980 년대, 1990 년대, 2000 년대 별로 그룹을 묶어서 급여의 평균과 인원수를 구한다.
 */
SELECT TRUNC(EXTRACT(YEAR FROM HIRE_DATE), -1) AS 년대
	,  ROUND(AVG(SALARY), 2) AS 급여평균
	,  COUNT(*) AS 인원수
	FROM EMPLOYEES
	GROUP BY TRUNC(EXTRACT(YEAR FROM HIRE_DATE), -1)
	ORDER BY 년대;


/*
 * 급여 집계를 위한 그룹을 다음과 같이 묶어서 총 인원수를 구한다.
 * 		2000 ~ 3500 미만 1그룹
 * 		3500 ~ 5000 미만 2그룹
 * 		5000 ~ 8000 미만 3그룹
 * 		8000 ~ 12000 미만 4그룹
 * 		12000 이상 5그룹
 */






SELECT DEPARTMENT_ID
	,  JOB_ID
	,  SUM(SALARY)
	,  AVG(SALARY)
	,  COUNT(*)
	FROM EMPLOYEES
	WHERE DEPARTMENT_ID IS NOT NULL
	GROUP BY ROLLUP(DEPARTMENT_ID, JOB_ID);
	

SELECT DEPARTMENT_ID
	,  JOB_ID
	,  SUM(SALARY)
	,  AVG(SALARY)
	,  COUNT(*)
	FROM EMPLOYEES
	WHERE DEPARTMENT_ID IS NOT NULL
	GROUP BY DEPARTMENT_ID, JOB_ID NULLS LAST;
	

SELECT DEPARTMENT_ID
	,  JOB_ID
	,  DECODE(NVL(COMMISSION_PCT, 0), 0, 'NO', 'YES')
	,  AVG(SALARY)
	,  COUNT(*)
	FROM EMPLOYEES
	WHERE DEPARTMENT_ID IS NOT NULL
	GROUP BY ROLLUP(DEPARTMENT_ID, JOB_ID, DECODE(NVL(COMMISSION_PCT, 0), 0, 'NO', 'YES'))
	ORDER BY DEPARTMENT_ID, JOB_ID, 3 NULLS LAST;
	

/*
 * 부서, 고용년도 별 급여 통계(최고 급여, 최저 급여, 평균) 를 구한다.
 * 		- ROLLUP, CUBE 를 적용하여 구한다.
 * 		- 부서가 NULL 인원이 있기 때문에 해당 인원은 제외한다.
 */

SELECT * FROM EMPLOYEES;